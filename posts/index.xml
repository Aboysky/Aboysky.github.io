<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - Aboysky</title><link>https://aboysky.com/posts/</link><description>所有文章 | Aboysky</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>aboyskyi@gmail.com (Aboysky)</managingEditor><webMaster>aboyskyi@gmail.com (Aboysky)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 09 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://aboysky.com/posts/" rel="self" type="application/rss+xml"/><item><title>矩形区域不超过k的最大数值和_363</title><link>https://aboysky.com/posts/%E7%9F%A9%E5%BD%A2%E5%8C%BA%E5%9F%9F%E4%B8%8D%E8%B6%85%E8%BF%87k%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%80%BC%E5%92%8C/</link><pubDate>Sat, 09 Oct 2021 00:00:00 +0000</pubDate><author>作者</author><guid>https://aboysky.com/posts/%E7%9F%A9%E5%BD%A2%E5%8C%BA%E5%9F%9F%E4%B8%8D%E8%B6%85%E8%BF%87k%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%80%BC%E5%92%8C/</guid><description>363. 矩形区域不超过 K 的最大数值和 Difficulty: 困难 给你一个 m x n 的矩阵 matrix 和一个整数 k ，找出并返回矩阵内部矩形区域的不超过 k 的最大数值和。 题目数据保证总会存</description></item><item><title>下一个排列</title><link>https://aboysky.com/posts/%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97/</link><pubDate>Wed, 25 Aug 2021 20:58:44 +0000</pubDate><author>作者</author><guid>https://aboysky.com/posts/%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97/</guid><description>31. 下一个排列 Difficulty: 中等 实现获取 下一个排列 的函数，算法需要将给定数字序列重新排列成字典序中下一个更大的排列。 如果不存在下一个更大的排列，则将数字重</description></item><item><title>JVM</title><link>https://aboysky.com/posts/jvm/</link><pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate><author>作者</author><guid>https://aboysky.com/posts/jvm/</guid><description>JVM 基于栈的指令集架构和基于寄存器的指令集架构 栈 同样操作指令更多，因为有许多入栈出栈操作指令，但是指令一般不带参数。并且由于栈在内存中，肯定比</description></item><item><title>聚焦爬虫</title><link>https://aboysky.com/posts/%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A8/</link><pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate><author>作者</author><guid>https://aboysky.com/posts/%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A8/</guid><description>1. 正则表达式 2. bs4解析 2.1 定位标签 soup.tagName 返回文档中第一次出现的名为tagName的标签 soup.find(‘tagName’) 和soup.tag</description></item><item><title>Java并发基本理论</title><link>https://aboysky.com/posts/java%E5%B9%B6%E5%8F%91/</link><pubDate>Fri, 18 Jun 2021 00:00:00 +0000</pubDate><author>作者</author><guid>https://aboysky.com/posts/java%E5%B9%B6%E5%8F%91/</guid><description>Java并发 线程 线程和进程的区别 创建线程的方式 其实新建线程的方式就只有一种，就是Thread类的Start0方法，但是这个方法是一个priv</description></item><item><title>Docker</title><link>https://aboysky.com/posts/docker/</link><pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate><author>作者</author><guid>https://aboysky.com/posts/docker/</guid><description>1.理念 一次构建,随处运行 解决运行环境和配置问题软件容器,方便做持续集成并有助于整体发布的容器虚拟化技术 和虚拟机的区别 2.docker组成 架</description></item><item><title>Hello World</title><link>https://aboysky.com/posts/hello-world/</link><pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate><author>作者</author><guid>https://aboysky.com/posts/hello-world/</guid><description>Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.
Quick Start Create a new post 1 $ hexo new &amp;#34;My New Post&amp;#34; More info: Writing
Run server 1 $ hexo server More info: Server
Generate static files 1 $ hexo generate More info: Generating</description></item><item><title>在D天送达包裹的能力</title><link>https://aboysky.com/posts/%E5%9C%A8d%E5%A4%A9%E9%80%81%E8%BE%BE%E5%8C%85%E8%A3%B9%E7%9A%84%E8%83%BD%E5%8A%9B/</link><pubDate>Mon, 26 Apr 2021 15:07:22 +0000</pubDate><author>作者</author><guid>https://aboysky.com/posts/%E5%9C%A8d%E5%A4%A9%E9%80%81%E8%BE%BE%E5%8C%85%E8%A3%B9%E7%9A%84%E8%83%BD%E5%8A%9B/</guid><description>1011. 在 D 天内送达包裹的能力 Difficulty: 中等 传送带上的包裹必须在 D 天内从一个港口运送到另一个港口。 传送带上的第 i 个包裹的重量为 weights[i]。每一天</description></item><item><title>最长有效括号</title><link>https://aboysky.com/posts/%E6%9C%80%E9%95%BF%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7/</link><pubDate>Mon, 26 Apr 2021 09:27:43 +0000</pubDate><author>作者</author><guid>https://aboysky.com/posts/%E6%9C%80%E9%95%BF%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7/</guid><description><![CDATA[32. 最长有效括号 Difficulty: ** 示例 1： 输入：s = &ldquo;(()&rdquo; 输出：2 解释：最长有效括号子串是 &ldquo;()&rdquo; 示例 2： 输入：s = &ldquo;)()())&rdquo; 输出：4 解释：最长有效括号子串是 &ldquo;()()&rdquo; 示例 3： 输入：]]></description></item><item><title>合并K个有序链表</title><link>https://aboysky.com/posts/%E5%90%88%E5%B9%B6k%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</link><pubDate>Sun, 25 Apr 2021 18:40:45 +0000</pubDate><author>作者</author><guid>https://aboysky.com/posts/%E5%90%88%E5%B9%B6k%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</guid><description>23. 合并K个升序链表 Difficulty: 困难 给你一个链表数组，每个链表都已经按升序排列。 请你将所有链表合并到一个升序链表中，返回合并后的链表。 示例 1： 1 2 3 4 5</description></item></channel></rss>
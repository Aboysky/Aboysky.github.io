<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Aboysky</title><link>https://aboysky.com/</link><description>Recent content on Aboysky</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>aboyskyi@gmail.com (Aboysky)</managingEditor><webMaster>aboyskyi@gmail.com (Aboysky)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 09 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://aboysky.com/index.xml" rel="self" type="application/rss+xml"/><item><title>友链</title><link>https://aboysky.com/friends/</link><pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/friends/</guid><description>雨临Lewis的博客 "不想当写手的码农不是好咸鱼"</description></item><item><title>矩形区域不超过k的最大数值和_363</title><link>https://aboysky.com/posts/%E7%9F%A9%E5%BD%A2%E5%8C%BA%E5%9F%9F%E4%B8%8D%E8%B6%85%E8%BF%87k%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%80%BC%E5%92%8C/</link><pubDate>Sat, 09 Oct 2021 00:00:00 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/posts/%E7%9F%A9%E5%BD%A2%E5%8C%BA%E5%9F%9F%E4%B8%8D%E8%B6%85%E8%BF%87k%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%80%BC%E5%92%8C/</guid><description>363. 矩形区域不超过 K 的最大数值和 Difficulty: 困难 给你一个 m x n 的矩阵 matrix 和一个整数 k ，找出并返回矩阵内部矩形区域的不超过 k 的最大数值和。 题目数据保证总会存</description></item><item><title>下一个排列</title><link>https://aboysky.com/posts/%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97/</link><pubDate>Wed, 25 Aug 2021 20:58:44 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/posts/%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97/</guid><description>31. 下一个排列 Difficulty: 中等 实现获取 下一个排列 的函数，算法需要将给定数字序列重新排列成字典序中下一个更大的排列。 如果不存在下一个更大的排列，则将数字重</description></item><item><title>JVM</title><link>https://aboysky.com/posts/jvm/</link><pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/posts/jvm/</guid><description>JVM 基于栈的指令集架构和基于寄存器的指令集架构 栈 同样操作指令更多，因为有许多入栈出栈操作指令，但是指令一般不带参数。并且由于栈在内存中，肯定比</description></item><item><title>聚焦爬虫</title><link>https://aboysky.com/posts/%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A8/</link><pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/posts/%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A8/</guid><description>1. 正则表达式 2. bs4解析 2.1 定位标签 soup.tagName 返回文档中第一次出现的名为tagName的标签 soup.find(‘tagName’) 和soup.tag</description></item><item><title>Java并发基本理论</title><link>https://aboysky.com/posts/java%E5%B9%B6%E5%8F%91/</link><pubDate>Fri, 18 Jun 2021 00:00:00 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/posts/java%E5%B9%B6%E5%8F%91/</guid><description>Java并发 线程 线程和进程的区别 创建线程的方式 其实新建线程的方式就只有一种，就是Thread类的Start0方法，但是这个方法是一个priv</description></item><item><title>Docker</title><link>https://aboysky.com/posts/docker/</link><pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/posts/docker/</guid><description>1.理念 一次构建,随处运行 解决运行环境和配置问题软件容器,方便做持续集成并有助于整体发布的容器虚拟化技术 和虚拟机的区别 2.docker组成 架</description></item><item><title>Hello World</title><link>https://aboysky.com/posts/hello-world/</link><pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/posts/hello-world/</guid><description>Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.
Quick Start Create a new post 1 $ hexo new &amp;#34;My New Post&amp;#34; More info: Writing
Run server 1 $ hexo server More info: Server
Generate static files 1 $ hexo generate More info: Generating</description></item><item><title>在D天送达包裹的能力</title><link>https://aboysky.com/posts/%E5%9C%A8d%E5%A4%A9%E9%80%81%E8%BE%BE%E5%8C%85%E8%A3%B9%E7%9A%84%E8%83%BD%E5%8A%9B/</link><pubDate>Mon, 26 Apr 2021 15:07:22 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/posts/%E5%9C%A8d%E5%A4%A9%E9%80%81%E8%BE%BE%E5%8C%85%E8%A3%B9%E7%9A%84%E8%83%BD%E5%8A%9B/</guid><description>1011. 在 D 天内送达包裹的能力 Difficulty: 中等 传送带上的包裹必须在 D 天内从一个港口运送到另一个港口。 传送带上的第 i 个包裹的重量为 weights[i]。每一天</description></item><item><title>最长有效括号</title><link>https://aboysky.com/posts/%E6%9C%80%E9%95%BF%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7/</link><pubDate>Mon, 26 Apr 2021 09:27:43 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/posts/%E6%9C%80%E9%95%BF%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7/</guid><description>32. 最长有效括号 Difficulty: ** 示例 1： 输入：s = &amp;ldquo;(()&amp;rdquo; 输出：2 解释：最长有效括号子串是 &amp;ldquo;()&amp;rdquo; 示例 2： 输入：s = &amp;ldquo;)()())&amp;rdquo; 输出：4 解释：最长有效括号子串是 &amp;ldquo;()()&amp;rdquo; 示例 3： 输入：</description></item><item><title>合并K个有序链表</title><link>https://aboysky.com/posts/%E5%90%88%E5%B9%B6k%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</link><pubDate>Sun, 25 Apr 2021 18:40:45 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/posts/%E5%90%88%E5%B9%B6k%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</guid><description>23. 合并K个升序链表 Difficulty: 困难 给你一个链表数组，每个链表都已经按升序排列。 请你将所有链表合并到一个升序链表中，返回合并后的链表。 示例 1： 1 2 3 4 5</description></item><item><title>组合总和归纳</title><link>https://aboysky.com/posts/%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C%E5%BD%92%E7%BA%B3/</link><pubDate>Sat, 24 Apr 2021 13:22:46 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/posts/%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C%E5%BD%92%E7%BA%B3/</guid><description/></item><item><title>组合总和IV</title><link>https://aboysky.com/posts/%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8Civ/</link><pubDate>Sat, 24 Apr 2021 09:43:21 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/posts/%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8Civ/</guid><description>377. 组合总和 Ⅳ Problem Difficulty: 中等 给你一个由 不同 整数组成的数组 nums ，和一个目标整数 target 。请你从 nums 中找出并返回总和为 target 的元素组合的个数。 题目数据保证答案符合 32 位</description></item><item><title>最大整除子集</title><link>https://aboysky.com/posts/%E6%9C%80%E5%A4%A7%E6%95%B4%E9%99%A4%E5%AD%90%E9%9B%86/</link><pubDate>Fri, 23 Apr 2021 20:18:49 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/posts/%E6%9C%80%E5%A4%A7%E6%95%B4%E9%99%A4%E5%AD%90%E9%9B%86/</guid><description>368. 最大整除子集 题目 Difficulty: 中等 给你一个由 无重复 正整数组成的集合 nums ，请你找出并返回其中最大的整除子集 answer ，子集中每一元素对 (answer[i], answer[j]) 都应当满足： answer[i] % answer[j] == 0 ，</description></item><item><title>动态规划</title><link>https://aboysky.com/posts/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link><pubDate>Sun, 18 Apr 2021 09:55:12 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/posts/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid><description>动态规划 5. 最长回文子串 Difficulty: 中等 给你一个字符串 s，找到 s 中最长的回文子串。 示例 1： 1 2 3 输入：s = &amp;#34;babad&amp;#34; 输出：&amp;#34;bab&amp;#34; 解释：&amp;#3</description></item><item><title>排序算法总结</title><link>https://aboysky.com/posts/%E6%8E%92%E5%BA%8F%E6%80%BB%E7%BB%93/</link><pubDate>Wed, 31 Mar 2021 16:53:43 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/posts/%E6%8E%92%E5%BA%8F%E6%80%BB%E7%BB%93/</guid><description>[TOC] 排序算法 快速排序 思路： 先寻找一个坐标，然后将小于坐标的都放到坐标的左边，大于等于坐标的都放到坐标的右边，如此将原数组分成左右两块数组，对每</description></item><item><title>about</title><link>https://aboysky.com/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/about/</guid><description>你好呀！ 感谢相遇！从此，世界上多了一分有关你我的痕迹！ 因为总想在世上留下点什么，影响更多的人或物，于是， 我开始尽力的去分享我的生活！ 生活中的</description></item></channel></rss>
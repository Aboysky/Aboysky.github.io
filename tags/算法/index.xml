<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>算法 on Aboysky</title><link>https://aboysky.com/tags/%E7%AE%97%E6%B3%95/</link><description>Recent content in 算法 on Aboysky</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>aboyskyi@gmail.com (Aboysky)</managingEditor><webMaster>aboyskyi@gmail.com (Aboysky)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 09 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://aboysky.com/tags/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml"/><item><title>矩形区域不超过k的最大数值和_363</title><link>https://aboysky.com/posts/%E7%9F%A9%E5%BD%A2%E5%8C%BA%E5%9F%9F%E4%B8%8D%E8%B6%85%E8%BF%87k%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%80%BC%E5%92%8C/</link><pubDate>Sat, 09 Oct 2021 00:00:00 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/posts/%E7%9F%A9%E5%BD%A2%E5%8C%BA%E5%9F%9F%E4%B8%8D%E8%B6%85%E8%BF%87k%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%80%BC%E5%92%8C/</guid><description>363. 矩形区域不超过 K 的最大数值和 Difficulty: 困难 给你一个 m x n 的矩阵 matrix 和一个整数 k ，找出并返回矩阵内部矩形区域的不超过 k 的最大数值和。 题目数据保证总会存</description></item><item><title>动态规划</title><link>https://aboysky.com/posts/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link><pubDate>Sun, 18 Apr 2021 09:55:12 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/posts/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid><description>动态规划 5. 最长回文子串 Difficulty: 中等 给你一个字符串 s，找到 s 中最长的回文子串。 示例 1： 1 2 3 输入：s = &amp;#34;babad&amp;#34; 输出：&amp;#34;bab&amp;#34; 解释：&amp;#3</description></item><item><title>排序算法总结</title><link>https://aboysky.com/posts/%E6%8E%92%E5%BA%8F%E6%80%BB%E7%BB%93/</link><pubDate>Wed, 31 Mar 2021 16:53:43 +0000</pubDate><author>aboyskyi@gmail.com (Aboysky)</author><guid>https://aboysky.com/posts/%E6%8E%92%E5%BA%8F%E6%80%BB%E7%BB%93/</guid><description>[TOC] 排序算法 快速排序 思路： 先寻找一个坐标，然后将小于坐标的都放到坐标的左边，大于等于坐标的都放到坐标的右边，如此将原数组分成左右两块数组，对每</description></item></channel></rss>
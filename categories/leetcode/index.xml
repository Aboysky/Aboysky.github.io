<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>leetcode - 分类 - Aboysky</title><link>https://aboysky.com/categories/leetcode/</link><description>leetcode - 分类 - Aboysky</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>aboyskyi@gmail.com (Aboysky)</managingEditor><webMaster>aboyskyi@gmail.com (Aboysky)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 09 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://aboysky.com/categories/leetcode/" rel="self" type="application/rss+xml"/><item><title>矩形区域不超过k的最大数值和_363</title><link>https://aboysky.com/posts/%E7%9F%A9%E5%BD%A2%E5%8C%BA%E5%9F%9F%E4%B8%8D%E8%B6%85%E8%BF%87k%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%80%BC%E5%92%8C/</link><pubDate>Sat, 09 Oct 2021 00:00:00 +0000</pubDate><author>作者</author><guid>https://aboysky.com/posts/%E7%9F%A9%E5%BD%A2%E5%8C%BA%E5%9F%9F%E4%B8%8D%E8%B6%85%E8%BF%87k%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%80%BC%E5%92%8C/</guid><description>363. 矩形区域不超过 K 的最大数值和 Difficulty: 困难 给你一个 m x n 的矩阵 matrix 和一个整数 k ，找出并返回矩阵内部矩形区域的不超过 k 的最大数值和。 题目数据保证总会存</description></item><item><title>下一个排列</title><link>https://aboysky.com/posts/%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97/</link><pubDate>Wed, 25 Aug 2021 20:58:44 +0000</pubDate><author>作者</author><guid>https://aboysky.com/posts/%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97/</guid><description>31. 下一个排列 Difficulty: 中等 实现获取 下一个排列 的函数，算法需要将给定数字序列重新排列成字典序中下一个更大的排列。 如果不存在下一个更大的排列，则将数字重</description></item><item><title>在D天送达包裹的能力</title><link>https://aboysky.com/posts/%E5%9C%A8d%E5%A4%A9%E9%80%81%E8%BE%BE%E5%8C%85%E8%A3%B9%E7%9A%84%E8%83%BD%E5%8A%9B/</link><pubDate>Mon, 26 Apr 2021 15:07:22 +0000</pubDate><author>作者</author><guid>https://aboysky.com/posts/%E5%9C%A8d%E5%A4%A9%E9%80%81%E8%BE%BE%E5%8C%85%E8%A3%B9%E7%9A%84%E8%83%BD%E5%8A%9B/</guid><description>1011. 在 D 天内送达包裹的能力 Difficulty: 中等 传送带上的包裹必须在 D 天内从一个港口运送到另一个港口。 传送带上的第 i 个包裹的重量为 weights[i]。每一天</description></item><item><title>最长有效括号</title><link>https://aboysky.com/posts/%E6%9C%80%E9%95%BF%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7/</link><pubDate>Mon, 26 Apr 2021 09:27:43 +0000</pubDate><author>作者</author><guid>https://aboysky.com/posts/%E6%9C%80%E9%95%BF%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7/</guid><description><![CDATA[32. 最长有效括号 Difficulty: ** 示例 1： 输入：s = &ldquo;(()&rdquo; 输出：2 解释：最长有效括号子串是 &ldquo;()&rdquo; 示例 2： 输入：s = &ldquo;)()())&rdquo; 输出：4 解释：最长有效括号子串是 &ldquo;()()&rdquo; 示例 3： 输入：]]></description></item><item><title>合并K个有序链表</title><link>https://aboysky.com/posts/%E5%90%88%E5%B9%B6k%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</link><pubDate>Sun, 25 Apr 2021 18:40:45 +0000</pubDate><author>作者</author><guid>https://aboysky.com/posts/%E5%90%88%E5%B9%B6k%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</guid><description>23. 合并K个升序链表 Difficulty: 困难 给你一个链表数组，每个链表都已经按升序排列。 请你将所有链表合并到一个升序链表中，返回合并后的链表。 示例 1： 1 2 3 4 5</description></item><item><title>组合总和归纳</title><link>https://aboysky.com/posts/%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C%E5%BD%92%E7%BA%B3/</link><pubDate>Sat, 24 Apr 2021 13:22:46 +0000</pubDate><author>作者</author><guid>https://aboysky.com/posts/%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C%E5%BD%92%E7%BA%B3/</guid><description></description></item><item><title>组合总和IV</title><link>https://aboysky.com/posts/%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8Civ/</link><pubDate>Sat, 24 Apr 2021 09:43:21 +0000</pubDate><author>作者</author><guid>https://aboysky.com/posts/%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8Civ/</guid><description>377. 组合总和 Ⅳ Problem Difficulty: 中等 给你一个由 不同 整数组成的数组 nums ，和一个目标整数 target 。请你从 nums 中找出并返回总和为 target 的元素组合的个数。 题目数据保证答案符合 32 位</description></item><item><title>最大整除子集</title><link>https://aboysky.com/posts/%E6%9C%80%E5%A4%A7%E6%95%B4%E9%99%A4%E5%AD%90%E9%9B%86/</link><pubDate>Fri, 23 Apr 2021 20:18:49 +0000</pubDate><author>作者</author><guid>https://aboysky.com/posts/%E6%9C%80%E5%A4%A7%E6%95%B4%E9%99%A4%E5%AD%90%E9%9B%86/</guid><description>368. 最大整除子集 题目 Difficulty: 中等 给你一个由 无重复 正整数组成的集合 nums ，请你找出并返回其中最大的整除子集 answer ，子集中每一元素对 (answer[i], answer[j]) 都应当满足： answer[i] % answer[j] == 0 ，</description></item></channel></rss>